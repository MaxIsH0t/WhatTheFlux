buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    jcenter()

    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
}

version = "1.0.0"
group = "io.github.phantamanta44.wtflux"
archivesBaseName = "wtflux"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"

    mappings = "snapshot_20171003"
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    deobfCompile "cofh:RedstoneFlux:1.12-2.0.0.1:deobf"
    deobfCompile "cofh:CoFHWorld:1.12.2-1.3.1.7:deobf"
    deobfCompile "cofh:ThermalExpansion:1.12.2-5.5.4.43:deobf"
    deobfCompile "cofh:ThermalFoundation:1.12.2-2.6.3.27:deobf"
    deobfCompile "cofh:CoFHCore:1.12.2-4.6.3.27:deobf"
    deobfCompile "codechicken:CodeChickenLib:1.12.2-3.2.2.355:deobf"

    deobfProvided "mezz.jei:jei_1.12.2:4.15.0.277:api"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}
